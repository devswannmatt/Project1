//- Mixin for creating a form input
mixin formInput(name, type, label, value = '', required = false, showClear = false, desc = '')
  .form-group
    label(for=name) #{label}
    if showClear
      .input-group
        input.form-control(type=type 'id'=`${name}_preview` name=`${name}_preview` value=value disabled)
        input.form-control(type=type 'id'=name name=name value=value required=required)
        .input-group-append
          +clearButton(name)
    else
      input.form-control(type=type 'id'=name name=name value=value required=required)
    small(class='form-text text-muted')=desc

mixin multiSelect(name, labelText='', options=[], selectedOptions=[])
  .form-group
    label(for=name)= labelText
    select.form-control(name=name id=name multiple)
      each option in options
        option(value=option selected=(selectedOptions.includes(option) ? true : false))= option

mixin formTextarea(name, label, value = '', required = false, advanced = false)
  .form-group
    label(for=name) #{label}
    if advanced
      .input-group
        textarea.form-control(id=name name=name required=required)= value
        .input-group-append
          +clearButton(name)
      .input-group
        div.htmlRenderArea
    else
      textarea.form-control(id=name name=name required=required)= value

mixin formTextareaPreview()
  .form-group
    label(for='contentPreview') Content Preview
    .preview-container#contentPreview(style='border: 1px solid #ccc; padding: 10px; margin-top: 10px; min-height: 100px; background-color: #f9f9f9;')
    
mixin formSelect(name, label, options, selectedValue = '', advanced = false)
  p=option
  .form-group
    label(for=name) #{label}
    if advanced
      .input-group
        select.form-control(id=`${name}_preview` name=`${name}_preview` disabled)
          option(value='') Select a #{label}
          each option in options
            option(value=option.value selected=option.value == selectedValue)= `${option.text} (${option.value})`
        select.form-control(id=name name=name)
          option(value='') Select a #{label}
          each option in options
            option(value=option.value selected=option.value == selectedValue)= `${option.text} (${option.value})`
        .input-group-append
          +clearButton(name)
    else
      select.form-control(id=name name=name)
        option(value='') Select a #{label}
        each option in options
          option(value=option.value selected=(option.value == selectedValue) ? 'selected' : '')= option.text

mixin formButton(text, type = 'submit', extraClass = 'btn-primary', icon, id)
  button.btn-sm(id=id type=type 'class'=extraClass data-dismiss=`${type}` data-text=`${text}` title=`${title}` )
    if icon
      i(class=`fas fa-${icon}` data-text=`${text}`)
    else
      span= text

mixin simpleButton(config, onclick, size = '')
  div(style='font-size: small;')=config.label ? config.label : ''
    button(id=config.id class=`btn-sm btn-${config.type} ${size}` type='button' data-toggle='tooltip' title=`${config.title}` onclick=onclick)
      if config.icon
        i(class=`fas fa-fw fa-${config.icon}`)
      if config.text
        div(style='padding-left: 4px; padding-right: 4px;')=config.text

mixin iframeModalButton(src, size)
  button.btn.btn-success.pull-right(data-toggle='modal', data-target='#modal', data-src=`${src}` data-size=size data-type='frm')
    i(class=`fas fa-plus`)

mixin modalBuilder(size)
  div.modal.fade(id=`modal`, type=`${type}` tabindex='-1', role='dialog', aria-labelledby=`${type}ModalLabel`, aria-hidden='true')
    div.modal-dialog(class=`modal-${size}` role='document')
      div.modal-content
        div.modal-header
          h5.modal-title
          div.pull-right
            include pdfPage
            +formButton('close-modal', 'modal', 'btn-danger pull-right', 'close')
            a#modal-edit-link(href='')
              +formButton('edit-modal', 'edit', 'btn-primary pull-right', 'edit')
            a#modal-download-link(href='' download)
              +formButton('download-modal', 'download', 'btn-primary pull-right', 'download')
        div.modal-body
          canvas#modal-pdf-viewer-canvas(style='width: 100%; height: 100%;')
          img#modal-body-image(style='width: 100%; height: 100%;', src='', alt='')
          div.modal-desc-container
            span.modal-desc-text
              span#modal-body-desc
              div#modal-body-extra
          div()
            iframe#frm-modal-content(style='width: 100%;', frameborder='0')

mixin clearButton(field)
  button.btn.btn-sm.btn-outline-danger(type='button' onclick=`document.getElementById('${field}').value=''`)
    i(class=`fas fa-close`)

mixin deleteButton(msg1, msg2, msg3)
  form(action=`/pages/delete/${page._id}`, method='POST')
    +formButton('Delete', 'submit', 'btn-danger pull-right', 'trash-alt', 'holdDeleteBtn', onsubmit=`floatingMessage("${msg1}", "${msg2}", "${msg3}")`)

mixin contextMenu()
  div#contextMenu.context-menu
    table
      tr
        td
          +simpleButton({ type:'clear', icon:'arrow-left', title:'Go Back' }, 'pageBack()')
        td
          +simpleButton({ type:'clear', icon:'rotate-right', title:'Reload' }, 'pageReload()')
        td 
          +simpleButton({ type:'clear', icon:'arrow-right', title:'Go Forward' }, 'pageForward()')
    ul
      a(href='./account')
        li
          i(class=`fas fa-fw fa-user`)
          span='Account'
      a(href='./upload' data-toggle='modal', data-type='frm', data-target='#modal', data-src='/upload' data-name='Upload File')
        li
          i(class=`fas fa-fw fa-upload`)
          span='Upload File'
      a(href='#')
        li
          i(class=`fas fa-fw fa-bookmark`)
          span='Bookmark Page'
    div#context-image(style='display: none;')
      hr
      ul
        a#maximise-url(target="_blank")
          li
            i(class=`fas fa-fw fa-arrow-up-from-bracket`)
            span='Open in New Tab'
        a#context-image-edit(data-toggle='modal', data-type='frm', data-target='#modal', data-src='')
          li
            i(class=`fas fa-fw fa-edit`)
            span='Edit Image'
        a#download-url(download)
          li
            i(class=`fas fa-fw fa-download`)
            span='Download Image'
        a#clipboard-url
          li
            i(class=`fas fa-fw fa-link`)
            span='Copy Link'

mixin actionLog()
  if (!isModal)
    div#floating-frame
      div(style='margin-bottom: 4px;')=`Action Log`
        if error.length
          span=` (`
          span.danger.floating-frame-errors(data-errors=error.length)='Errors: 0'
          span=`)`
        i(class='fa-solid fa-up-right-and-down-left-from-center float-right') 
      if error
        div#floating-frame-log(style='display: none;')
          each err in error
            div.danger=err.msg