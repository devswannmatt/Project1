script.

    var contextData = {}

    const pageReload  = () => location.reload()
    const pageBack    = () => history.back()
    const pageForward = () => history.forward()

    const changeUnitCount = (parent, mod = 1) => {
        console.log('changeUnitCount contextData', contextData);
        //- let target = $(parent).data()
        //- console.log('changeUnitCount', target);
        let target = contextData.key
        console.log('changeUnitCount', target);

        let counter = $(`#unit-count-${target}`);
        let points  = $(`#unit-points-${target}`);

        let unitCount = Number(counter.data('unitcount')) || 0;
        let unitCost  = Number(points.data('unitcost'))   || 0;

        let count = unitCount + mod;
        let value = unitCost * count;

        if (count < 0) return
        let totalCounter = $('#unit-count-total');
        let currentTotal = Number(totalCounter.text()) || 0;

        let total = currentTotal + (mod * unitCost);
        if (total >= 0) totalCounter.text(total);

        if (count <= 0) {
            counter.text('').data('unitcount', 0);
            points.text('').data('unitpoints', 0);
            $(`.quick-list-row-${target}`).removeClass('quick-list-row-set');
            $(`.quick-list-row-${target}`).addClass('quick-list-row');
        } else {
            counter.html(`(${count})`).data('unitcount', count);
            points.html(`(${value})`).data('unitpoints', value);
            $(`.quick-list-row-${target}`).addClass('quick-list-row-set');
            $(`.quick-list-row-${target}`).removeClass('quick-list-row');
        }
    };

    const toggleQuickList = () => {
        console.log('showQuickList()')
        $('.quick-list').toggle()
    }

    const toggleQuickListUnits = () => {
        console.log('toggleQuickListUnits()')
        $('.quick-list-row').toggle()
    }

    const initHoldDeleteButton = () => {
        var holdDeleteBtn = document.getElementById('hold-delete-button');
        if (holdDeleteBtn) {
            var editForm = document.getElementById('hold-delete-form');
            var holdTimeout;
            holdDeleteBtn.addEventListener('mousedown', function(event) {
                var speed = 500

                $(holdDeleteBtn).css('transform', 'scale(1.20)')

                holdTimeout = setTimeout(function() {
                    $(holdDeleteBtn).css('transform', 'scale(1)')
                    $('#hold-delete-confirm').show(200)

                    setTimeout(function() { $('#hold-delete-confirm').hide(200) }, 5000)

                    $('#hold-delete-confirm').on('click', () => {
                        console.log('confirm clicked')
                        editForm.submit();
                    })
                }, speed);
            });

            holdDeleteBtn.addEventListener('mouseup',    function(event) {
                $(holdDeleteBtn).css('transform', 'scale(1)')
                clearTimeout(holdTimeout); });
            holdDeleteBtn.addEventListener('mouseleave', function(event) {
                $(holdDeleteBtn).css('transform', 'scale(1)')
                clearTimeout(holdTimeout); });
        }
    }

    const highlightRowById = (types, button) => {
        let setButton = $(button)
        console.log(setButton)
        $('.dynamic-btn-highlight').removeClass('dynamic-btn-highlight');
        $('.dynamic-row').addClass('darken');
        $(`.dynamic-icon`).hide();
        if (types == 'Clear') {
            $('.dynamic-active-filter').text('')
            $(`.dynamic-row`).removeClass('darken');
        } else {
            setButton.addClass('dynamic-btn-highlight');
            $('.dynamic-active-filter').text(`Active: ${setButton.data('name')}`)
            types.forEach((type) => {
                if (type.unitType) {
                    $(`.unitType${type.unitType.name}`).removeClass('darken');
                    if (type.cross)     $(`.cross${type.unitType.name}`).show();
                    if (type.defended)  $(`.defended${type.unitType.name}`).show();
                    if (type.fortified) $(`.fortified${type.unitType.name}`).show();
                }
            })
        }
    }

    const setImageDetails = (e) => {
        let element = $(e)
        $(element).attr('href', contextData.src)
        $(element).attr('src', contextData.src)
        $(element).data('src', `/images/edit/${contextData._id}`)
    }